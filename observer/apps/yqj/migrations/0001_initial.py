# Generated by Django 1.9.6 on 2017-11-16 10:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.base_Article', verbose_name='文章')),
            ],
            options={
                'verbose_name_plural': '文章收藏',
            },
        ),
        migrations.CreateModel(
            name='Custom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchkeyword', models.CharField(max_length=255, verbose_name='关键词')),
            ],
            options={
                'verbose_name_plural': '指定监测',
            },
        ),
        migrations.CreateModel(
            name='CustomKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newkeyword', models.CharField(max_length=255, verbose_name='关键词')),
                ('review', models.CharField(default='', max_length=255, verbose_name='审核')),
                ('custom', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='yqj.Custom')),
            ],
            options={
                'verbose_name_plural': '指定监测关键词',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': '舆情机用户组',
            },
        ),
        migrations.CreateModel(
            name='GroupAuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth', models.CharField(max_length=255, verbose_name='用户名')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yqj.Group', verbose_name='分组')),
            ],
            options={
                'verbose_name_plural': '用户绑定',
            },
        ),
        migrations.CreateModel(
            name='LocaltionScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, verbose_name='分数')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.base_Article', verbose_name='文章')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yqj.Group', verbose_name='分组')),
            ],
            options={
                'verbose_name_plural': '本地相关度',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='登录名')),
                ('password', models.CharField(max_length=255, verbose_name='密码')),
                ('salt', models.CharField(max_length=255)),
                ('isAdmin', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': '舆情机用户',
            },
        ),
        migrations.CreateModel(
            name='yaj_Inspection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualitied', models.FloatField(default=1.0, verbose_name='关注度')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.base_Inspection', verbose_name='抽检信息')),
            ],
            options={
                'verbose_name_plural': '抽检信息',
            },
        ),
        migrations.CreateModel(
            name='yqj_Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.base_Article', verbose_name='文章')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.ArticleCategory', verbose_name='文章类别')),
            ],
            options={
                'verbose_name_plural': '文章',
            },
        ),
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='yqj.User')),
            ],
            bases=('yqj.user',),
        ),
        migrations.AddField(
            model_name='user',
            name='area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Area'),
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yqj.Group'),
        ),
        migrations.AddField(
            model_name='customkeyword',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='yqj.Group'),
        ),
        migrations.AddField(
            model_name='articlecollection',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='yqj.User', verbose_name='用户'),
        ),
    ]
